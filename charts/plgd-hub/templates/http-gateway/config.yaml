{{- $httpGatewayCertPath := "/certs" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "plgd-hub.httpgateway.configName" . }}
  namespace: {{ .Release.Namespace }}
data:
  {{ .Values.httpgateway.config.fileName }}: |
    {{- with .Values.httpgateway }}
    log:
      level: {{ .log.level }}
      encoding: {{ .log.encoding }}
      stacktrace:
        enabled: {{ .log.stacktrace.enabled }}
        level: {{ .log.stacktrace.level }}
      encoderConfig:
        timeEncoder: {{ .log.encoderConfig.timeEncoder }}
    apis:
      http:
        address: {{  .apis.http.address | default (printf "0.0.0.0:%v" .port) | quote }}
        readTimeout: {{ .apis.http.readTimeout }}
        readHeaderTimeout: {{ .apis.http.readHeaderTimeout }}
        writeTimeout: {{ .apis.http.writeTimeout }}
        idleTimeout: {{ .apis.http.idleTimeout }}
        tls:
          {{- $tls := .apis.http.tls }}
          {{- include "plgd-hub.internalCertificateConfig" (list $ $tls $httpGatewayCertPath ) | indent 8 }}
          clientCertificateRequired: {{ .apis.http.tls.clientCertificateRequired }}
          {{- include "plgd-hub.crlInternalConfig" (list $ $tls.crl) | indent 10 }}
        webSocket:
          streamBodyLimit: {{ .apis.http.webSocket.streamBodyLimit }}
          pingFrequency: {{ .apis.http.webSocket.pingFrequency }}
        authorization:
          {{- include "plgd-hub.basicAuthorizationConfig" (list $ .apis.http.authorization "httpgateway.apis.http.authorization" $httpGatewayCertPath) | indent 8 }}
    clients:
      grpcGateway:
        grpc:
          address: {{ printf " " }}{{- include "plgd-hub.grpcGatewayAddress" (list $ .clients.grpcGateway.grpc.address ) | quote }}
          sendMsgSize: {{ int64 .clients.grpcGateway.grpc.sendMsgSize | default 4194304 }}
          recvMsgSize: {{ int64 .clients.grpcGateway.grpc.recvMsgSize | default 4194304 }}
          keepAlive:
            time: {{ .clients.grpcGateway.grpc.keepAlive.time }}
            timeout: {{ .clients.grpcGateway.grpc.keepAlive.timeout }}
            permitWithoutStream: {{ .clients.grpcGateway.grpc.keepAlive.permitWithoutStream }}
          tls:
            {{- $grpcTls := .clients.grpcGateway.grpc.tls }}
            {{- include "plgd-hub.internalCertificateConfig" (list $ $grpcTls $httpGatewayCertPath ) | indent 10 }}
            useSystemCAPool: {{ .clients.grpcGateway.grpc.tls.useSystemCAPool }}
            {{- include "plgd-hub.crlInternalConfig" (list $ $grpcTls.crl) | indent 12 }}
      {{- include "plgd-hub.openTelemetryExporterConfig" (list $ $httpGatewayCertPath) | nindent 6 }}
    ui:
      enabled: {{ .ui.enabled }}
      {{- if .ui.enabled  }}
      directory: {{ .ui.directory | quote }}
      webConfiguration:
        httpGatewayAddress: {{ .ui.webConfiguration.httpGatewayAddress | default ( printf "https://%s" ( include "plgd-hub.httpgateway.apiDomain" $)) | quote }}
        deviceProvisioningService: {{ .ui.webConfiguration.deviceProvisioningService | default ( include "plgd-hub.httpgateway.dpsApiDomain" $) | quote }}
        snippetService: {{ .ui.webConfiguration.snippetService | default ( include "plgd-hub.httpgateway.snippetServiceApiDomain" $) | quote }}
        {{- if not $.Values.mockoauthserver.enabled }}
        webOAuthClient:
          authority: {{ required ".ui.webConfiguration.webOAuthClient.authority or global.authority is required" ( .ui.webConfiguration.webOAuthClient.authority | default $.Values.global.authority ) | quote }}
          clientID: {{ required "httpgateway.ui.webConfiguration.webOAuthClient.clientID or global.oauth.web.clientID is required" ( .ui.webConfiguration.webOAuthClient.clientID | default $.Values.global.oauth.web.clientID ) | quote }}
          audience: {{ .ui.webConfiguration.webOAuthClient.audience | default ( $.Values.global.oauth.web.audience | default $.Values.global.audience ) | quote }}
          {{- if .ui.webConfiguration.webOAuthClient.scopes | default $.Values.global.oauth.web.scopes }}
          scopes:
            {{- range .ui.webConfiguration.webOAuthClient.scopes | default $.Values.global.oauth.web.scopes }}
            - {{ . | quote }}
            {{- end }}
          {{- else }}
          scopes: []
          {{- end }}
          grantType: {{ .grantType | default "authorization_code" | quote }}
        {{- else }}
        webOAuthClient:
          {{- $client := index $.Values.mockoauthserver.oauth 1 }}
          clientID: {{ $client.clientID | quote }}
          authority: {{ include "plgd-hub.mockoauthserver.uri" $ | quote }}
          audience: {{ include "plgd-hub.mockoauthserver.ingressDomain" $ | quote }}
          scopes: [ "openid" ]
          grantTypes: [ "authorization_code" ]
        {{- end }}
        deviceOAuthClient:
        {{- $providers := $.Values.mockoauthserver.oauth }}
        {{- if not $.Values.mockoauthserver.enabled }}
        {{- $providers = required "At least one oauth provider must be specified for coapgateway.apis.coap.authorization.providers or global.oauth.device" ( $.Values.coapgateway.apis.coap.authorization.providers | default $.Values.global.oauth.device ) }}
        {{- end }}
        {{- range $providers }}
          {{- if .useInUi }}
          {{- if $.Values.mockoauthserver.enabled }}
          authority: {{ include "plgd-hub.mockoauthserver.uri" $ | quote }}
          {{- else }}
          authority: {{ required "authority for oauth device provider or global.authority is required" ( .authority | default $.Values.global.authority ) | quote }}
          {{- end }}
          clientID: {{ .clientID | quote }}
          audience: {{ .audience | default $.Values.global.audience | quote }}
          {{- if .scopes }}
          scopes:
          {{- range  .scopes }}
            - {{ toYaml . | quote }}
          {{- end }}
          {{- else }}
          scopes: []
          {{- end }}
          grantType: {{ .grantType | default "authorization_code" | quote }}
          providerName: {{ .name | quote }}
          {{- end }}
        {{- end }}
        {{- $m2mClient := include "plgd-hub.m2moauthserver.getJwtPrivateKeyClient" $ | fromYaml }}
        {{- if $m2mClient }}
        m2mOAuthClient:
          authority: {{.ui.webConfiguration.m2mOAuthClient.authority | default (include "plgd-hub.m2moauthserver.uri" $) | quote }}
          clientID: {{ required "httpgateway.ui.webConfiguration.m2mOAuthClient.clientID or $m2mClient.id is required" ( .ui.webConfiguration.m2mOAuthClient.clientID | default $m2mClient.id ) | quote }}
          audience: {{ .ui.webConfiguration.m2mOAuthClient.audience | default $.Values.global.audience | quote }}
          {{- if .ui.webConfiguration.m2mOAuthClient.scopes | default $m2mClient.allowedScopes }}
          scopes:
            {{- range .ui.webConfiguration.m2mOAuthClient.scopes | default $m2mClient.allowedScopes }}
            - {{ . | quote }}
            {{- end }}
          {{- else }}
          scopes: []
          {{- end }}
          {{- if .ui.webConfiguration.m2mOAuthClient.grantType }}
          grantType: {{ .ui.webConfiguration.m2mOAuthClient.grantType | quote }}
          {{- else }}
          {{- if gt (len $m2mClient.allowedGrantTypes) 0 }}
          grantType: {{ $m2mClient.allowedGrantTypes | first | quote }}
          {{- end }}
          {{- end }}
          {{- if .ui.webConfiguration.m2mOAuthClient.clientAssertionType }}
          clientAssertionType: {{ .ui.webConfiguration.m2mOAuthClient.clientAssertionType | quote }}
          {{- else }}
          {{- if $m2mClient.jwtPrivateKey.enabled }}
          clientAssertionType: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
          {{- end }}
          {{- end }}
        {{- end }}
        visibility:
          mainSidebar:
            certificates : {{ .ui.webConfiguration.visibility.mainSidebar.certificates }}
            chatRoom : {{ .ui.webConfiguration.visibility.mainSidebar.chatRoom }}
            configuration : {{ .ui.webConfiguration.visibility.mainSidebar.configuration }}
            deviceProvisioning : {{ .ui.webConfiguration.visibility.mainSidebar.deviceProvisioning }}
            devices : {{ .ui.webConfiguration.visibility.mainSidebar.devices }}
            docs : {{ .ui.webConfiguration.visibility.mainSidebar.docs }}
            pendingCommands : {{ .ui.webConfiguration.visibility.mainSidebar.pendingCommands }}
            remoteClients : {{ .ui.webConfiguration.visibility.mainSidebar.remoteClients }}
            dashboard : {{ .ui.webConfiguration.visibility.mainSidebar.dashboard }}
            integrations : {{ .ui.webConfiguration.visibility.mainSidebar.integrations }}
            deviceFirmwareUpdate : {{ .ui.webConfiguration.visibility.mainSidebar.deviceFirmwareUpdate }}
            deviceLogs : {{ .ui.webConfiguration.visibility.mainSidebar.deviceLogs }}
            apiTokens : {{ .ui.webConfiguration.visibility.mainSidebar.apiTokens }}
            schemaHub : {{ .ui.webConfiguration.visibility.mainSidebar.schemaHub }}
            snippetService: {{ .ui.webConfiguration.visibility.mainSidebar.snippetService }}
      {{- end }}
{{- end }}